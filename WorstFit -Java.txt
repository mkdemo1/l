import java.util.Scanner;

class MemoryBlock {
    int id;
    int size;
    boolean allocated;

    public MemoryBlock(int id, int size) {
        this.id = id;
        this.size = size;
        this.allocated = false;
    }
}

class Process {
    int id;
    int size;
    int allocatedBlockId;

    public Process(int id, int size) {
        this.id = id;
        this.size = size;
        this.allocatedBlockId = -1;
    }
}

public class WorstFitMemoryAllocation {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the number of memory blocks: ");
        int numBlocks = scanner.nextInt();
        MemoryBlock[] memoryBlocks = new MemoryBlock[numBlocks];

        for (int i = 0; i < numBlocks; i++) {
            System.out.print("Enter size of Memory Block " + (i + 1) + ": ");
            int size = scanner.nextInt();
            memoryBlocks[i] = new MemoryBlock(i + 1, size);
        }

        System.out.print("Enter the number of processes: ");
        int numProcesses = scanner.nextInt();
        Process[] processes = new Process[numProcesses];

        for (int i = 0; i < numProcesses; i++) {
            System.out.print("Enter size of Process " + (i + 1) + ": ");
            int size = scanner.nextInt();
            processes[i] = new Process(i + 1, size);
        }

        for (Process process : processes) {
            int worstFitBlockId = -1;
            int worstFitSize = -1;

            for (MemoryBlock block : memoryBlocks) {
                if (!block.allocated && block.size >= process.size && block.size > worstFitSize) {
                    worstFitBlockId = block.id;
                    worstFitSize = block.size;
                }
            }

            if (worstFitBlockId != -1) {
                process.allocatedBlockId = worstFitBlockId;
                memoryBlocks[worstFitBlockId - 1].allocated = true;
            }
        }

        System.out.println("\nProcess\tProcess Size\tAllocated Block");

        for (Process process : processes) {
            System.out.println(
                "P" + process.id + "\t\t" + process.size + "\t\t" + (process.allocatedBlockId != -1 ? "M" + process.allocatedBlockId : "Not Allocated")
            );
        }

        scanner.close();
    }
}